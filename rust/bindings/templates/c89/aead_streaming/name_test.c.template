/* @{generated} */
#include "{algorithm:Flat}_{api:Flat}_{profile}.h"

int main(void) {
  {prefix:Snake}_{algorithm:Flat}_{api:Flat}_{profile:Snake}_key_t aead_key;
  {prefix:Snake}_{algorithm:Flat}_{api:Flat}_{profile:Snake}_state_t aead_state;
  unsigned char key[{prefix:UpperSnake}_{algorithm:UpperSnake}_{profile:UpperSnake}_KEY_LEN] = {0};
  unsigned char nonce[{prefix:UpperSnake}_{algorithm:UpperSnake}_{profile:UpperSnake}_NONCE_LEN] = {0};
  unsigned char tag[{prefix:UpperSnake}_{algorithm:UpperSnake}_{profile:UpperSnake}_TAG_LEN] = {0};
  unsigned char aad[1] = {0};
  unsigned char plaintext[1] = {0};
  unsigned char ciphertext[1] = {0};

  if (!{prefix}_{algorithm:Flat}_{api:Flat}_{profile}_is_supported()) {
    return 0;
  }

  if (!{prefix}_{algorithm:Flat}_{api:Flat}_{profile}_init_key(&aead_key, key, sizeof(key))) {
    return 1;
  }
  if (!{prefix}_{algorithm:Flat}_{api:Flat}_{profile}_init_state(&aead_state, &aead_key, nonce, sizeof(nonce))) {
    return 2;
  }
  if (!{prefix}_{algorithm:Flat}_{api:Flat}_{profile}_aad_update(&aead_state, &aead_key, aad, sizeof(aad))) {
    return 3;
  }
  if (!{prefix}_{algorithm:Flat}_{api:Flat}_{profile}_encrypt_update(&aead_state, &aead_key, plaintext, sizeof(plaintext), ciphertext, sizeof(ciphertext))) {
    return 4;
  }
  if (!{prefix}_{algorithm:Flat}_{api:Flat}_{profile}_encrypt_finalize(&aead_state, &aead_key, tag, sizeof(tag))) {
    return 5;
  }
  if (!{prefix}_{algorithm:Flat}_{api:Flat}_{profile}_init_state(&aead_state, &aead_key, nonce, sizeof(nonce))) {
    return 2;
  }
  if (!{prefix}_{algorithm:Flat}_{api:Flat}_{profile}_aad_update(&aead_state, &aead_key, aad, sizeof(aad))) {
    return 3;
  }
  if (!{prefix}_{algorithm:Flat}_{api:Flat}_{profile}_decrypt_update(&aead_state, &aead_key, ciphertext, sizeof(ciphertext), plaintext, sizeof(plaintext))) {
    return 4;
  }
  if (!{prefix}_{algorithm:Flat}_{api:Flat}_{profile}_decrypt_finalize(&aead_state, &aead_key, tag, sizeof(tag))) {
    return 5;
  }
  return 0;
}
